# -*- coding: utf-8 -*-
"""Customer Segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KjgkzEwANbUPYF8ymjuxY9Z59Zaw2rI2

Importing the Dependencies
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

"""Data Collection and Analysis"""

#loading the data from csv files to pandas dataframe
customer_data=pd.read_csv('/content/Mall_Customers.csv')

customer_data.head()

customer_data.shape

customer_data.info()

#checking for missing values
customer_data.isnull().sum()

"""Choosing the Annual Income and Spending Column"""

X = customer_data.iloc[:, 3:5].values

print(X)

"""Choosing the number of Clusters

WCSS -> Within Circle Sum of Squares
"""

#finding the wcss value for different cluster

wcss=[]

for i in range(1,11):
  kmeans=KMeans(n_clusters=i,init='k-means++',random_state=42)
  kmeans.fit(X)
  wcss.append(kmeans.inertia_)

#plot an elbow graph
sns.set()
plt.plot(range(1,11),wcss)
plt.title('The Elbow Point Graph')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.show()

"""Optimum Number of Cluster will be 5

Training the K-Means CLustering Model
"""

kmeans=KMeans(n_clusters=5,init='k-means++',random_state=0)

#return a label for each datapoint based on their cluster
y_kmeans=kmeans.fit_predict(X)
print(y_kmeans)

"""**5 Clusters - 0,1,2,3,4**

Visualizing all the clusters
"""

#plotting all the cluster and their centroid
plt.figure(figsize=(8,8))
plt.scatter(X[y_kmeans==0,0],X[y_kmeans==0,1],s=50,c='green',label='Cluster 1')
plt.scatter(X[y_kmeans==1,0],X[y_kmeans==1,1],s=50,c='red',label='Cluster 2')
plt.scatter(X[y_kmeans==2,0],X[y_kmeans==2,1],s=50,c='blue',label='Cluster 3')
plt.scatter(X[y_kmeans==3,0],X[y_kmeans==3,1],s=50,c='yellow',label='Cluster 4')
plt.scatter(X[y_kmeans==4,0],X[y_kmeans==4,1],s=50,c='orange',label='Cluster 5')

#plot the centroids
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=100,c='black',label='Centroids')

plt.title('Customer Groups')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.show()

